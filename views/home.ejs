<html>
<head>
    <title> Home </title>
</head>
<body>
<div>
    <div class="is-flex is-align-items-center notification is-primary p-0 m-0" style="width: 100%; height: 100%">
        <div class="hero is-primary" style="width: 600px">
            <div class="hero-body">
                <div class="title">
                    DYBE CLAN
                </div>
                <div>
                    <label class="subtitle"> Username </label>
                    <input class="input" id="username" />
                </div>
                <button class="button mt-4" onclick="connect()"> CHAT WITH THE DYBE CLAN </button>
                <div id="messagePlaceholder">
                </div>
            </div>
        </div>
    </div>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/socket.io/3.1.3/socket.io.js"
            integrity="sha512-2RDFHqfLZW8IhPRvQYmK9bTLfj/hddxGXQAred2wNZGkrKQkLGj8RCkXfRJPHlDerdHHIzTFaahq4s/P4V6Qig=="
            crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/js-cookie/2.2.1/js.cookie.min.js"
            integrity="sha512-Meww2sXqNHxI1+5Dyh/9KAtvI9RZSA4c1K2k5iL02oiPO/RH3Q30L3M1albtqMg50u4gRTYdV4EXOQqXEI336A=="
            crossorigin="anonymous"></script>
    <script>
        async function connect() {
            const username = document.getElementById('username').value;
            if (!username || username.trim() === "") {
                showErrorMessage("username cannot be empty");
                return;
            }
            const response = await fetch('/connect', {
                method: 'POST',
                headers: {
                    'Content-type' : 'application/json'
                },
                body: JSON.stringify({
                    username
                })
            });
            if (response.status === 200) {
                let token = await response.json();
                Cookies.set('user_token', token);
                console.log('Token : ', token);
                await redirectToChatRoom();
            }
            else if (response.status === 401) {
                console.log("Invalid username or password");
                showErrorMessage("Invalid username or password");
            }
            else {
                console.log("status not ok");
                showErrorMessage("the connection could not be established with the api");
            }
        }

        async function redirectToChatRoom() {
            window.location.replace('/room');
        }

        function showErrorMessage(message) {
            hideMessage();
            let errorMessagePlaceholder = document.getElementById("messagePlaceholder");
            let errorMessageElement = document.createElement("div");
            errorMessageElement.classList.add("notification");
            errorMessageElement.classList.add("is-danger");
            errorMessageElement.classList.add("mt-2");
            errorMessageElement.innerText = `There was an error : ${message}`;
            errorMessagePlaceholder.appendChild(errorMessageElement);
        }

        function hideMessage() {
            let errorMessagePlaceholder = document.getElementById("messagePlaceholder");
            errorMessagePlaceholder.innerHTML = '';
        }
    </script>
</body>
<style>
    @import "https://cdn.jsdelivr.net/npm/bulma@0.9.2/css/bulma.min.css";
</style>
</html>